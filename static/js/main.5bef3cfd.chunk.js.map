{"version":3,"sources":["components/common/Button.js","components/common/Toggle.js","components/common/Header.js","components/common/PageLayout.js","components/common/Input.js","components/common/PasswordInput.js","components/common/Spinner.js","components/pages/Login.js","components/pages/Home.js","themes/light.js","themes/dark.js","components/App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","p","secondary","theme","secondaryColor","primaryColor","large","css","ToggleWrapper","div","Notch","isActive","Toggle","onToggle","onClick","HeaderWrapper","header","Menu","nav","open","bodyBackgroundColor","StyledLink","children","props","bodyFontColor","MobileMenuIcon","Header","pathname","useLocation","useState","menuOpen","setMenuOpen","useContext","ThemeContext","id","setTheme","s","to","Content","main","PageLayout","Input","input","PasswordInputWrapper","PasswordInputStyled","attrs","type","placeholder","ToggleButton","PasswordInput","showPassword","setShowPassword","value","rotation","keyframes","Spinner","timeout","Form","form","Login","username","password","formFields","setFormFields","loading","setLoading","handleInputChange","e","persist","target","name","useEffect","clearTimeout","onSubmit","preventDefault","setTimeout","onChange","disabled","className","Home","GlobalStyle","createGlobalStyle","App","LightTheme","DarkTheme","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5bef3cfd.chunk.js","sourcesContent":["import styled, {css} from 'styled-components';\n\nconst Button = styled.button`\n    color: white;\n    background: ${p => p.secondary ? p.theme.secondaryColor : p.theme.primaryColor};\n    font-weight: bold;\n    ${p => p.large ? css`\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 1.5em;\n    ` : css`\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 1em;\n    `}\n    \n    box-shadow: none;\n    border: none;\n    width: 100%;\n    display: block;\n    white-space: none;\n\n    &:disabled{\n        background: #eee;\n        color: #666;\n    }\n`;\n\nexport {Button};","import React from 'react';\nimport styled from 'styled-components';\n\nconst ToggleWrapper = styled.div`\n    width: 50px;\n    min-width: 50px;\n    height: 25px;\n    border-radius: 25px;\n    border: 1px solid #666;\n    margin: auto;\n    display: flex;\n    background-image: linear-gradient(to bottom, ${p => p.theme.primaryColor}, ${p => p.theme.secondaryColor});\n`;\n\nconst Notch = styled.div`\n    height: 21px;\n    width: 21px;\n    border: 1px solid #666;\n    margin-top: 1px;\n    background: white;\n    border-radius: 50%;\n    transition: transform 0.1s linear;\n    transform: translate(${p => p.isActive ? '26px' : '1px'});\n`\n\nexport function Toggle({isActive, onToggle}){\n    return (\n        <ToggleWrapper onClick={onToggle}>\n            <Notch isActive={isActive} />\n        </ToggleWrapper>\n    )\n}","import React, {useState, useContext} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\nimport {Link as ReactRouterDomLink, useLocation} from 'react-router-dom';\nimport {Toggle} from './Toggle';\n\nconst HeaderWrapper = styled.header`\n    height: 60px;\n    width: 100%;\n    box-sizing: border-box;\n    display: flex;\n    padding: 0 16px;\n    position: fixed;\n    top: 0;\n    background-image: linear-gradient(to right, ${p => p.theme.primaryColor}, ${p => p.theme.secondaryColor});\n    border-bottom: 3px solid ${p => p.theme.secondaryColor};\n`;\n\nconst Menu = styled.nav`\n    display: ${p => p.open ? 'block' : 'none'};\n    font-family: 'Open Sans';\n    position: absolute;\n    width: 100%;\n    top: 60px;\n    left: 0;\n    padding: 8px;\n    box-sizing: border-box;\n    border-bottom: 3px solid ${p => p.theme.secondaryColor};\n    background: ${p => p.theme.bodyBackgroundColor};\n\n    @media(min-width: 768px){\n        display: flex;\n        background: none;\n        left: initial;\n        top: initial;\n        margin: auto 0 auto auto;\n        border-bottom: none;\n        position: relative;\n        width: initial;\n    }\n`;\n\nconst Link = ({isActive, children, ...props}) => {\n    return (\n        <ReactRouterDomLink {...props}>\n            {children}\n        </ReactRouterDomLink>\n    );\n};\n\nconst StyledLink = styled(Link)`\n    padding: 4px 8px;\n    display: block;\n    text-align: center;\n    box-sizing: border-box;\n    margin: auto 0;\n    font-weight: ${p => p.isActive ? 'bold' : 'normal'};\n    color: ${p => p.theme.bodyFontColor};\n`\n\nconst MobileMenuIcon = styled.div`\n    margin: auto 0 auto auto;\n    width: 25px;\n    min-width: 25px;\n    padding: 5px;\n\n    >div{\n        height: 3px;\n        background: ${p => p.theme.bodyFontColor};\n        margin: 5px 0;\n        width: 100%;\n    }\n\n    @media(min-width: 768px){\n        display: none;\n    }\n`\n\nexport function Header(){\n    const {pathname} = useLocation();\n    const [menuOpen, setMenuOpen] = useState(false);\n    const {id, setTheme} = useContext(ThemeContext);\n\n    return (\n        <HeaderWrapper>\n            <MobileMenuIcon onClick={() => setMenuOpen(s => !s)}>\n                <div />\n                <div />\n                <div />\n            </MobileMenuIcon>\n            <Menu open={menuOpen}>\n                <StyledLink to=\"/\" isActive={pathname === '/'}>\n                    Home\n                </StyledLink>\n                <StyledLink to=\"/login\" isActive={pathname === '/login'}>\n                    Login\n                </StyledLink>\n                <Toggle isActive={id === 'dark'} onToggle={setTheme} />\n            </Menu>\n            \n        </HeaderWrapper>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {Header} from './Header';\n\nconst Content = styled.main`\n    max-width: 800px;\n    margin: 80px auto 0 auto;\n    padding: 0 16px;\n    box-sizing: border-box;\n    font-family: 'Open Sans';\n\n    h1, h2, h3, h4, h5, h6{\n        font-family: 'Kaushan Script';\n    }\n`;\n\nexport function PageLayout({children}){\n    return (\n        <>\n            <Header />\n            <Content>\n                {children}\n            </Content>\n        </>\n    )\n}","import styled from 'styled-components';\n\nconst Input = styled.input`\n    padding: 4px 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 1em;\n    font-family: 'Open Sans';\n    margin-bottom: 8px;\n    width: 100%;\n    box-sizing: border-box;\n    height: 40px;\n`\n\nexport {Input};","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {Input} from './Input';\n\nconst PasswordInputWrapper = styled.div`\n    display: flex;\n    ~div{\n        margin-bottom: 8px;\n    }\n`\n\nconst PasswordInputStyled = styled(Input).attrs(() => ({\n    type: 'password',\n    placeholder: 'Password'\n}))`\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n`\n\nconst ToggleButton = styled.div`\n    height: 40px;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    font-size: 0.9em;\n    display: flex;\n    padding: 8px;\n    border-left: 0;\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n    background: white;\n    font-weight: bold;\n    cursor: pointer;\n    user-select: none;\n    color: black;\n`\n\nexport function PasswordInput(props){\n    const [showPassword, setShowPassword] = useState(true);\n\n    return (\n        <>\n            <PasswordInputWrapper>\n                <PasswordInputStyled {...props} />\n                <ToggleButton onClick={() => setShowPassword(s => !s)}>\n                    {showPassword ? 'Hide' : 'Show'}\n                </ToggleButton>\n            </PasswordInputWrapper>\n            <div>\n                {showPassword ? props.value : ''}\n            </div>\n        </>\n    );\n}","import styled, {keyframes} from 'styled-components';\n\nconst rotation = keyframes`\n    from{\n        transform: rotate(0deg);\n    }\n    \n    to{\n        transform: rotate(360deg);\n    }\n`;\n\nconst Spinner = styled.div`\n    height: 30px;\n    width: 30px;\n    border: 1px solid #f8049c;\n    border-radius: 50%;\n    border-top: none;\n    border-right: none;\n    margin: 16px auto;\n    animation: ${rotation} 1s linear infinite;\n`\n\nexport {Spinner};","import React, {useState, useEffect} from 'react';\nimport {PageLayout, Input, PasswordInput, Button, Spinner} from 'components/common';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n    width: 100%;\n    max-width: 400px;\n    background: white;\n    border: 1px solid #eee;\n    padding: 16px;\n    box-sizing: border-box;\n    color: black;\n    border-radius: 4px;\n\n    .alt-text{\n        text-align: center;\n        margin: 10px 0;\n    }\n`;\n\nlet timeout;\n\nexport default function Login(){\n    const [formFields, setFormFields] = useState({username: '', password: ''});\n    const [loading, setLoading] = useState(false);\n\n    function handleInputChange(e){\n        e.persist();\n        setFormFields(s => ({\n            ...s,\n            [e.target.name]: e.target.value\n        }));\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        setLoading(true);\n        timeout = setTimeout(() => {\n            setLoading(false);\n        }, 2000);\n    }\n\n    useEffect(() => {\n        return ()=> {\n            if(timeout){\n                clearTimeout(timeout);\n            }\n        }\n    }, []);\n\n    return (\n        <PageLayout>\n            <h1>\n                Login\n            </h1>\n            <Form onSubmit={handleSubmit}>\n                {loading ? <Spinner /> : \n                <>\n                <Input \n                    value={formFields.username}\n                    onChange={handleInputChange}\n                    name=\"username\" \n                    type=\"text\"\n                    placeholder=\"Username\" />\n                <PasswordInput \n                    value={formFields.password}\n                    onChange={handleInputChange}\n                    name=\"password\" />\n                </>\n                }\n                <Button large type=\"submit\" disabled={loading}>\n                    {loading ? 'Loading...' : 'Login'}\n                </Button>\n                {!loading &&\n                <>\n                <div className=\"alt-text\">\n                    or\n                </div>\n                <Button secondary type=\"button\">\n                    Register\n                </Button>\n                </>\n                }\n            </Form>\n        </PageLayout>\n    )\n}","import React from 'react';\nimport {PageLayout} from 'components/common';\n\nexport default function Home(){\n    return (\n        <PageLayout>\n            <h1>\n                Home\n            </h1>\n            <p>I'm baby sustainable typewriter glossier jean shorts. Slow-carb chicharrones cliche, art party hella narwhal echo park marfa try-hard flexitarian. Leggings franzen lumbersexual brunch organic you probably haven't heard of them single-origin coffee paleo deep v four loko taxidermy master cleanse. IPhone kitsch prism kickstarter selfies knausgaard. Ethical crucifix fanny pack you probably haven't heard of them. Vape tumblr pop-up, flannel plaid gochujang squid hashtag messenger bag retro keffiyeh pour-over. Seitan hexagon you probably haven't heard of them flannel authentic health goth beard disrupt.</p><p>Unicorn tumeric hell of plaid, raw denim lomo semiotics gochujang succulents tote bag selfies man bun. Pop-up heirloom meh occupy butcher direct trade blue bottle tote bag schlitz. Offal try-hard mumblecore af shoreditch. Godard artisan retro, biodiesel umami cloud bread unicorn. Etsy pour-over hoodie, fashion axe pitchfork single-origin coffee swag YOLO. Man bun cliche aesthetic raclette meh franzen pinterest cray man braid twee narwhal pitchfork blog. Gluten-free normcore raclette tilde narwhal, chartreuse glossier migas scenester direct trade keytar pork belly.</p><p>Microdosing food truck hoodie jean shorts wolf dreamcatcher tofu church-key blue bottle distillery. Af bespoke narwhal pickled austin taiyaki, tofu fam tousled stumptown cronut activated charcoal. Roof party adaptogen you probably haven't heard of them art party, dreamcatcher mixtape ugh keffiyeh etsy lyft affogato snackwave chia cold-pressed. Humblebrag seitan kombucha succulents fingerstache bitters health goth direct trade drinking vinegar intelligentsia vinyl tattooed slow-carb tacos. Vaporware jianbing tote bag polaroid man braid copper mug microdosing direct trade put a bird on it mixtape godard vinyl cliche try-hard. Art party DIY artisan lumbersexual, kickstarter hell of viral. Vexillologist blue bottle paleo freegan plaid +1 chicharrones narwhal.</p><p>3 wolf moon put a bird on it sartorial vinyl normcore palo santo forage vape ramps pug hashtag master cleanse letterpress tofu. Schlitz fam helvetica, you probably haven't heard of them post-ironic kickstarter yuccie. Irony vape blog, XOXO bushwick raclette mixtape succulents gentrify godard kinfolk keytar banh mi church-key neutra. Taxidermy swag fixie raclette irony. Leggings austin forage, yuccie direct trade fashion axe fam seitan prism whatever freegan pop-up pabst post-ironic hell of. Crucifix artisan celiac mixtape, mustache letterpress tilde gentrify distillery live-edge woke meh shaman everyday carry.</p>\n        </PageLayout>\n    )\n}","const theme = {\n    id: 'light',\n\tprimaryColor: '#f8049c',\n\tsecondaryColor: '#fdd54f',\n\tbodyBackgroundColor: 'white',\n\tbodyFontColor: 'black'\n};\n\nexport default theme;","const theme = {\n    id: 'dark',\n\tprimaryColor: 'black',\n\tsecondaryColor: 'midnightblue',\n\tbodyBackgroundColor: 'black',\n\tbodyFontColor: 'white'\n};\n\nexport default theme;","import React, {useState} from 'react';\nimport {createGlobalStyle, ThemeProvider} from 'styled-components';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Login from 'components/pages/Login';\nimport Home from 'components/pages/Home';\nimport LightTheme from 'themes/light';\nimport DarkTheme from 'themes/dark';\n\nconst GlobalStyle = createGlobalStyle`\n\tbody{\n\t\tbackground: ${p => p.theme.bodyBackgroundColor};\n\t\tmin-height: 100vh;\n\t\tmargin: 0;\n\t\tcolor: ${p => p.theme.bodyFontColor};\n\t\tfont-family: 'Kaushan Script'\n\t}\n`;\n\nfunction App() {\n\tconst [theme, setTheme] = useState(LightTheme);\n\n\treturn (\n\t\t<ThemeProvider theme={{...theme, setTheme: () => {\n\t\t\tsetTheme(s => s.id === 'light' ? DarkTheme : LightTheme);\n\t\t}}}>\n\t\t\t<GlobalStyle />\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t<Login />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}